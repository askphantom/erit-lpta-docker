{"version":3,"sources":["./src/app/@auth/auth.module.ts","./src/app/@auth/auth.routing.module.ts","./src/app/@auth/auth/auth.component.ts","./src/app/@auth/auth/auth.component.html","./src/app/@auth/change-password/change-password.component.ts","./src/app/@auth/change-password/change-password.component.html","./src/app/@auth/forgot-password/forgot-password.component.ts","./src/app/@auth/forgot-password/forgot-password.component.html","./src/app/@auth/index.ts","./src/app/@auth/login/login.component.ts","./src/app/@auth/login/login.component.html","./src/app/@auth/signup/signup.component.ts","./src/app/@auth/signup/signup.component.html","./src/app/@auth/verify-email/verify-email.component.ts","./src/app/@auth/verify-email/verify-email.component.html","./src/app/@guards/already-logged-in/already-logged-in.guard.ts","./src/app/@guards/index.ts","./src/app/@model/index.ts","./src/app/@model/user.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["\r\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport {AuthRoutingModule, routedComponent} from './auth.routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ValidatorsModule } from '../validators/validators.module';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n@NgModule({\r\n    imports: [CommonModule,\r\n                AuthRoutingModule,\r\n                FormsModule,\r\n                ValidatorsModule,\r\n                MatRadioModule\r\n            ],\r\n    exports: [],\r\n    declarations: [AuthComponent, ...routedComponent ],\r\n    schemas: [],\r\n    providers: [],\r\n})\r\nexport class AuthModule { }\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport {\r\n  AuthComponent,\r\n  LoginComponent,\r\n  SignupComponent,\r\n  ChangePasswordComponent,\r\n  ForgotPasswordComponent,\r\n  VerifyEmailComponent,\r\n} from \".\";\r\nimport { AlreadyLoggedInGuard } from \"../@guards\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: \"register\",\r\n        component: SignupComponent,\r\n        canActivate: [AlreadyLoggedInGuard],\r\n      },\r\n      {\r\n        path: \"login\",\r\n        component: LoginComponent,\r\n        canActivate: [AlreadyLoggedInGuard],\r\n      },\r\n      {\r\n        path: \"forgot-password\",\r\n        component: ForgotPasswordComponent,\r\n        canActivate: [AlreadyLoggedInGuard],\r\n      },\r\n      { path: \"reset-password\", component: ChangePasswordComponent },\r\n      { path: \"email-verification\", component: VerifyEmailComponent },\r\n      { path: \"verify\", component: VerifyEmailComponent },\r\n      // { path: 'verification-sent/:email', component: VerificationSentComponent },\r\n      { path: \"\", pathMatch: \"full\", redirectTo: \"login\" },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\nexport const routedComponent = [\r\n  AuthComponent,\r\n  SignupComponent,\r\n  LoginComponent,\r\n  VerifyEmailComponent,\r\n  ForgotPasswordComponent,\r\n  ChangePasswordComponent,\r\n  // VerificationSentComponent\r\n];\r\n\r\nexport const usedGuards = [AlreadyLoggedInGuard];\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AuthService } from '../../@core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit, OnDestroy {\r\n  title: string;\r\n  loading = false;\r\n  loadingSubscription: Subscription;\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.checkForLoadingState();\r\n  }\r\n\r\n  checkForLoadingState() {\r\n   this.loadingSubscription =  this.authService.state$\r\n                  .subscribe(arg => this.loading = arg);\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n      this.loadingSubscription.unsubscribe();\r\n  }\r\n  \r\n\r\n}\r\n","<div id=\"container\">\r\n  <div class=\"d-flex flex-column main-box position-relative\">\r\n    <!-- <header></header> -->\r\n    <div class=\"auth-card m-md-auto m-0\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AuthService } from \"../../@core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { User } from \"../../@model\";\r\nimport { GeneralService } from \"../../@core/general.service\";\r\n\r\n@Component({\r\n  selector: \"app-change-password\",\r\n  templateUrl: \"./change-password.component.html\",\r\n  styleUrls: [\r\n    \"./../auth/auth.component.scss\",\r\n    \"./../forgot-password/forgot-password.component.scss\",\r\n    \"./../verify-email/verify-email.component.scss\",\r\n    \"./change-password.component.scss\",\r\n  ],\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  loading = true;\r\n  isVerified: boolean;\r\n\r\n  user = new User();\r\n  code: string;\r\n  email: any;\r\n  hidePassword = true;\r\n  hideConfirmPassword = true;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    private generalService: GeneralService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.code = params.code;\r\n      this.email = params[\"email\"];\r\n      this.verify(params.code, params[\"email\"]);\r\n    });\r\n  }\r\n\r\n  reset(user) {\r\n    this.loading = true;\r\n    this.authService.showLoader(true);\r\n    this.authService\r\n      .resetPassword({ code: this.code, pwd: user.password, email: this.email })\r\n      .subscribe(\r\n        (data) => {\r\n          this.loading = false;\r\n          this.authService.showLoader(false);\r\n          if (data.status._text != \"Failed\") {\r\n            this.toastr.success(\r\n              \"Your password has been reset, Kindly Login \",\r\n              \"Success \"\r\n            );\r\n            this.router.navigate([\"/auth/login\"]);\r\n          } else {\r\n            this.toastr.error(data.status_message._text, \"Oops\");\r\n          }\r\n        },\r\n        (error) => {\r\n          this.loading = false;\r\n          this.authService.showLoader(false);\r\n          this.toastr.error(\r\n            error.error.message || error.message || error,\r\n            \"Oops\",\r\n            {\r\n              timeOut: 15000,\r\n            }\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  verify(code, email) {\r\n    this.authService.showLoader(true);\r\n    this.authService.verifyEmail({ code, email }).subscribe(\r\n      (data) => {\r\n        this.loading = false;\r\n        this.authService.showLoader(false);\r\n\r\n        if (data.status._text != \"Failed\") {\r\n          this.isVerified = true;\r\n        } else {\r\n          this.toastr.error(data.status_message._text, \"Oops\");\r\n          this.isVerified = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.isVerified = false;\r\n        this.authService.showLoader(false);\r\n        this.loading = false;\r\n        this.toastr.error(\"Mail not verified\", \"\", {\r\n          timeOut: 15000,\r\n        });\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"auth-box d-flex flex-column flex-md-row\">\r\n  <div class=\"col-md-5 p-2 p-md-4 d-flex flex-column\">\r\n    <h2\r\n      class=\"font-weight-medium text-green-400 font-weight-med mt-md-5 mt-1 mb-2 text-md-center\"\r\n    >\r\n      Reset Password?\r\n    </h2>\r\n    <img\r\n      src=\"./assets/images/forgot-password.svg\"\r\n      class=\"mt-md-5 mt-1 mr-auto mr-md-0 align-self-center\"\r\n      alt=\"nigenius logo\"\r\n      srcset=\"\"\r\n    />\r\n  </div>\r\n  <div class=\"col-md-7 pl-3 pt-0 pt-md-3 p-md-4 bg-grey position-relative\">\r\n    <form\r\n      *ngIf=\"isVerified\"\r\n      #resetPasswordForm=\"ngForm\"\r\n      class=\"mt-5\"\r\n      (ngSubmit)=\"reset(user)\"\r\n    >\r\n      <div class=\"form-input mt-md-5 mt-2 pt-md-4 pt-2\">\r\n        <label class=\"mb-0\" for=\"password\">New Password</label>\r\n        <div class=\"position-relative\">\r\n          <input\r\n            id=\"password\"\r\n            placeholder=\"Type your password\"\r\n            type=\"password\"\r\n            required\r\n            name=\"password\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"user.password\"\r\n          />\r\n          <img\r\n            *ngIf=\"hidePassword\"\r\n            (click)=\"\r\n              hidePassword = authService.changePasswordState(\r\n                hidePassword,\r\n                $event,\r\n                0\r\n              )\r\n            \"\r\n            class=\"password-reveal fade-in\"\r\n            src=\"./assets/images/icons/password-icon.svg\"\r\n          />\r\n          <img\r\n            *ngIf=\"!hidePassword\"\r\n            (click)=\"\r\n              hidePassword = authService.changePasswordState(\r\n                hidePassword,\r\n                $event,\r\n                0\r\n              )\r\n            \"\r\n            class=\"password-reveal fade-in\"\r\n            src=\"./assets/images/icons/password-reveal-icon.svg\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-input\">\r\n        <label for=\"confirm-password\">Confirm Password</label>\r\n        <div class=\"position-relative\">\r\n          <input\r\n            id=\"confirm-password\"\r\n            placeholder=\"Re-Type password\"\r\n            type=\"password\"\r\n            exactMatch=\"password\"\r\n            required\r\n            name=\"confrim-password\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"user.confirm_password\"\r\n          />\r\n          <img\r\n            *ngIf=\"hideConfirmPassword\"\r\n            (click)=\"\r\n              hideConfirmPassword = authService.changePasswordState(\r\n                hideConfirmPassword,\r\n                $event,\r\n                0\r\n              )\r\n            \"\r\n            class=\"password-reveal fade-in\"\r\n            src=\"./assets/images/icons/password-icon.svg\"\r\n          />\r\n          <img\r\n            *ngIf=\"!hideConfirmPassword\"\r\n            (click)=\"\r\n              hideConfirmPassword = authService.changePasswordState(\r\n                hideConfirmPassword,\r\n                $event,\r\n                0\r\n              )\r\n            \"\r\n            class=\"password-reveal fade-in\"\r\n            src=\"./assets/images/icons/password-reveal-icon.svg\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        [disabled]=\"!resetPasswordForm.valid\"\r\n        class=\"btn bg-success bg-green-400 bg-success\"\r\n      >\r\n        Send Reset Link\r\n      </button>\r\n    </form>\r\n    <div *ngIf=\"!isVerified\">\r\n      <img src=\"assets/images/verify-{{ isVerified }}.svg\" alt=\"verify image\" />\r\n\r\n      <p class=\"text-main\">Account verification was not successful</p>\r\n    </div>\r\n\r\n    <div id=\"loading-overlay\" *ngIf=\"loading\">\r\n      <i class=\"fa fa-spinner edit fa-pulse fa-3x fa-fw\"> </i>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { User } from \"../../@model\";\r\nimport { AuthService } from \"../../@core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { GeneralService } from \"../../@core\";\r\nimport { appRoutes } from \"src/app/config\";\r\n\r\n@Component({\r\n  selector: \"app-verify\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\r\n    \"./../auth/auth.component.scss\",\r\n    \"./forgot-password.component.scss\",\r\n  ],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  email: string;\r\n  submitting: boolean;\r\n  routes = appRoutes;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  resetPassword(email: string) {\r\n    this.authService.showLoader(true);\r\n    this.submitting = true;\r\n    this.authService.forgotPassword(email).subscribe(\r\n      (data) => {\r\n        this.submitting = false;\r\n        this.authService.showLoader(false);\r\n        if (data.status._text != \"Failed\") {\r\n          this.toastr.success(\r\n            \"A reset link will be sent to the provided email address in less than 5 minutes, check your inbox and spam folder\",\r\n            \":)\",\r\n            {\r\n              timeOut: 15000,\r\n            }\r\n          );\r\n        } else {\r\n          this.toastr.error(data.status_message._text, \"Oops\");\r\n        }\r\n      },\r\n      (error) => {\r\n        this.submitting = false;\r\n        this.authService.showLoader(false);\r\n        this.toastr.error(\r\n          error.error.message || error.message || error || error,\r\n          \"Oops!!\"\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"auth-box d-flex flex-column flex-md-row\">\r\n  <div class=\"col-md-5 p-2 p-md-4 d-flex flex-column\">\r\n    <h2\r\n      class=\"font-weight-medium text-green-400 font-weight-med mt-md-5 mt-1 mb-2 text-md-center\"\r\n    >\r\n      Forgot Password?\r\n    </h2>\r\n    <img\r\n      src=\"./assets/images/forgot-password.svg\"\r\n      class=\"mt-md-5 mt-1 mr-auto mr-md-0 align-self-center\"\r\n      alt=\"nigenius logo\"\r\n      srcset=\"\"\r\n    />\r\n  </div>\r\n  <div class=\"col-md-7 pl-3 pt-0 pt-md-3 p-md-4 bg-grey position-relative\">\r\n    <form\r\n      #forgotPasswordForm=\"ngForm\"\r\n      class=\"mt-md-5 mt-1\"\r\n      (ngSubmit)=\"resetPassword(email)\"\r\n    >\r\n      <div class=\"form-input mt-md-5 mt-2 pt-md-4 pt-2\">\r\n        <label class=\"mb-0\" class=\"font-weight-light\" for=\"email\"\r\n          >Don't worry, happens to the best of us.</label\r\n        >\r\n        <input\r\n          id=\"email\"\r\n          placeholder=\"Type your registered email Address\"\r\n          type=\"email\"\r\n          required\r\n          name=\"email\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"email\"\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        [disabled]=\"!forgotPasswordForm.valid\"\r\n        class=\"btn bg-green-400 bg-success\"\r\n      >\r\n        Send Reset Link\r\n      </button>\r\n\r\n      <p class=\"pt-4\">\r\n        <small class=\"font-weight-light\"\r\n          >Back to <a [routerLink]=\"[routes.login]\" class=\"\"> Log in </a></small\r\n        >\r\n        <br />\r\n        <small class=\"font-weight-light\">\r\n          Don't have an account yet?\r\n          <a [routerLink]=\"[routes.register]\" class=\"\"> Create one </a></small\r\n        >\r\n      </p>\r\n    </form>\r\n    <div id=\"loading-overlay\" *ngIf=\"submitting\">\r\n      <i class=\"fa fa-spinner edit fa-pulse fa-3x fa-fw\"> </i>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export * from './auth/auth.component';\r\nexport * from './login/login.component';\r\nexport * from './signup/signup.component';\r\nexport * from './forgot-password/forgot-password.component';\r\nexport * from './verify-email/verify-email.component';\r\nexport * from './change-password/change-password.component';\r\n// export * from './verification-sent/verification-sent.component';\r\n\r\n","import { GeneralService } from \"src/app/@core\";\r\nimport { Component, OnInit, ViewContainerRef, ViewChild } from \"@angular/core\";\r\nimport { User } from \"../../@model\";\r\nimport { AuthService } from \"../../@core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { appRoutes } from \"src/app/config\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./../auth/auth.component.scss\", \"./login.component.scss\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  submitting: boolean;\r\n  hidePassword = true;\r\n  user = new User();\r\n  routes = appRoutes;\r\n  returnUrl: string;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private generalService: GeneralService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getReturnUrl();\r\n  }\r\n\r\n  getReturnUrl() {\r\n    this.route.queryParamMap.subscribe((param) => {\r\n      this.returnUrl = param.get(\"returnUrl\");\r\n    });\r\n  }\r\n\r\n  loginUser(user) {\r\n    this.submitting = true;\r\n    this.authService.showLoader(true);\r\n    this.authService.login(user).subscribe(\r\n      (data) => {\r\n        this.submitting = false;\r\n\r\n        data = this.generalService.convertToOneLayerViewModel(data);\r\n        this.authService.showLoader(false);\r\n        // debugger;\r\n        if (data.status === \"EmailUnverified\") {\r\n          this.authService.resendVerification(user.email).subscribe(\r\n            (data) => {\r\n              if (data.status != \"Failed\") {\r\n                this.toastr.info(\r\n                  data.status_message._text,\r\n                  \"Email not verified\",\r\n                  { timeOut: 100000000 }\r\n                );\r\n              }\r\n            },\r\n            (error) => {\r\n              this.submitting = false;\r\n              this.authService.showLoader(false);\r\n              this.toastr.error(\r\n                error.error.response.message || error.message || error,\r\n                \"Oops\"\r\n              );\r\n            }\r\n          );\r\n        } else if (data.status === \"Success\") {\r\n          delete data.status;\r\n          delete data.status_message;\r\n          this.authService.saveUserLocally(data);\r\n          this.authService.saveUserToken(data.token);\r\n          if (this.returnUrl) {\r\n            this.router.navigateByUrl(this.returnUrl);\r\n          } else {\r\n            this.router.navigate([\"./page/\"]);\r\n          }\r\n          this.toastr.clear();\r\n          this.toastr.success(\"You are In!\");\r\n        } else {\r\n          this.toastr.error(data.status_message, \"Oops\");\r\n        }\r\n\r\n        // } else {\r\n        //   this.toastr.error(data.message, 'Oops');\r\n        // }\r\n      },\r\n      (error) => {\r\n        try {\r\n          error = this.generalService.xmlToJson(error.error);\r\n          this.submitting = false;\r\n          this.authService.showLoader(false);\r\n          this.toastr.error(\r\n            error.status_message._text ||\r\n              \"Something went wrong when trying to create a user\"\r\n          );\r\n        } catch (error) {\r\n          this.submitting = false;\r\n          this.authService.showLoader(false);\r\n          this.toastr.error(\r\n            \"Something went wrong when trying to create a user\"\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"auth-box d-flex flex-column flex-md-row\">\r\n  <div class=\"col-lg-5 d-flex bg-img flex-column align-items-start\">\r\n    <div>\r\n      <img\r\n        src=\"./assets/images/logo-white.png\"\r\n        class=\"mt-auto d-flex d-md-none\"\r\n        alt=\"nigenius logo\"\r\n        srcset=\"\"\r\n      />\r\n      <h1 class=\"text-white font-weight-medium font-weight-med mt-4\">Login</h1>\r\n      <h5 class=\"font-weight-thin text-white\">\r\n        Pick up from where you left off.\r\n      </h5>\r\n    </div>\r\n    <img\r\n      src=\"./assets/images/logo-white.png\"\r\n      class=\"mt-auto d-none d-md-flex\"\r\n      alt=\"nigenius logo\"\r\n      srcset=\"\"\r\n    />\r\n  </div>\r\n  <div\r\n    class=\"col-lg-7 bg-grey position-relative d-flex align-items-center pb-0 pt-5\"\r\n  >\r\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"loginUser(user)\">\r\n      <div class=\"form-input\">\r\n        <label class=\"mb-0\" class=\"font-weight-light\" for=\"email\"\r\n          >Email address</label\r\n        >\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          required\r\n          name=\"email\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"user.email\"\r\n        />\r\n      </div>\r\n      <div class=\"form-input position-relative\">\r\n        <label class=\"mb-0\" class=\"font-weight-light\" for=\"password\"\r\n          >Password</label\r\n        >\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          required\r\n          name=\"password\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"user.password\"\r\n        />\r\n        <img\r\n          *ngIf=\"hidePassword\"\r\n          (click)=\"\r\n            hidePassword = authService.changePasswordState(hidePassword, $event)\r\n          \"\r\n          class=\"password-reveal fade-in\"\r\n          src=\"./assets/images/icons/password-icon.svg\"\r\n        />\r\n        <img\r\n          *ngIf=\"!hidePassword\"\r\n          (click)=\"\r\n            hidePassword = authService.changePasswordState(hidePassword, $event)\r\n          \"\r\n          class=\"password-reveal fade-in\"\r\n          src=\"./assets/images/icons/password-reveal-icon.svg\"\r\n        />\r\n      </div>\r\n      <button\r\n        [disabled]=\"!loginForm.valid\"\r\n        class=\"btn bg-green-400 bg-success cta-btn\"\r\n      >\r\n        Log In\r\n      </button>\r\n\r\n      <p class=\"pt-4\">\r\n        <small class=\"font-weight-light\"\r\n          >Don't have an account yet?\r\n          <a [routerLink]=\"[routes.register]\"> Create one</a></small\r\n        >\r\n        <br />\r\n        <small class=\"font-weight-light\">\r\n          Forgot Password?\r\n          <a [routerLink]=\"[routes.forgot]\" class=\"\">\r\n            Click here to reset</a\r\n          ></small\r\n        >\r\n      </p>\r\n    </form>\r\n    <div id=\"loading-overlay\" *ngIf=\"submitting\">\r\n      <i class=\"fa fa-spinner edit fa-pulse fa-3x fa-fw\"> </i>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { GeneralService } from \"src/app/@core\";\r\nimport { Component, OnInit, ViewChild, TemplateRef } from \"@angular/core\";\r\nimport { Validators } from \"@angular/forms\";\r\nimport { User } from \"../../@model\";\r\nimport { AuthService } from \"../../@core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { appRoutes } from \"src/app/config\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\r\n    \"./../auth/auth.component.scss\",\r\n    \"./../login/login.component.scss\",\r\n    \"./signup.component.scss\",\r\n  ],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  routes = appRoutes;\r\n  user = new User();\r\n  submitting = false;\r\n  currencies: any[];\r\n  hidePassword = true;\r\n  hideConfirmPassword = true;\r\n  packageID: string;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private generalService: GeneralService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getSubscriptionPackageId();\r\n  }\r\n\r\n  getSubscriptionPackageId() {\r\n    this.route.queryParamMap.subscribe((param) => {\r\n      this.packageID = param.get(\"sub\");\r\n    });\r\n  }\r\n\r\n  signUpUser(user: any) {\r\n    this.authService.showLoader(true);\r\n    this.submitting = true;\r\n    delete user.confirmpassword;\r\n    if (this.packageID) {\r\n      user.package_id = this.packageID;\r\n    }\r\n    this.authService.signup(user).subscribe(\r\n      (data) => {\r\n        this.submitting = false;\r\n        this.authService.showLoader(false);\r\n\r\n        if (data.status._text != \"Failed\") {\r\n          this.toastr.success(\r\n            \"You're in, check your email, we will send you a verification link in less than 5 minutes, check your inbox and spam folder :)\",\r\n            \"\",\r\n            { timeOut: 100000000 }\r\n          );\r\n\r\n          // this.router.navigate(['./page/']);\r\n        } else {\r\n          this.toastr.error(data.status_message._text, \"Oops\");\r\n        }\r\n      },\r\n      (error) => {\r\n        try {\r\n          error = this.generalService.xmlToJson(error.error);\r\n          this.submitting = false;\r\n          this.authService.showLoader(false);\r\n          this.toastr.error(\r\n            error.status_message._text ||\r\n              \"Something went wrong when trying to create a user\"\r\n          );\r\n        } catch (error) {\r\n          this.submitting = false;\r\n          this.authService.showLoader(false);\r\n          this.toastr.error(\r\n            \"Something went wrong when trying to create a user\"\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"auth-box d-flex flex-column flex-md-row\">\r\n  <div class=\"col-lg-5 d-flex bg-img flex-column align-items-start\">\r\n    <div>\r\n      <img\r\n        src=\"./assets/images/logo-white.png\"\r\n        class=\"mt-auto d-flex d-md-none\"\r\n        alt=\"nigenius logo\"\r\n        srcset=\"\"\r\n      />\r\n      <h1 class=\"text-white font-weight-medium font-weight-med mt-md-5 mt-4\">\r\n        Sign Up\r\n      </h1>\r\n      <h6 class=\"font-weight-thin text-white mb-0 mb-md-2\">\r\n        Nigenius is much better when you have an account.\r\n      </h6>\r\n      <h6 class=\"font-weight-thin text-white pt-md-2 pt-0\">\r\n        Why not create one now.\r\n      </h6>\r\n    </div>\r\n    <img\r\n      src=\"./assets/images/logo-white.png\"\r\n      class=\"mt-auto d-none d-md-flex\"\r\n      alt=\"nigenius logo\"\r\n      srcset=\"\"\r\n    />\r\n  </div>\r\n  <div class=\"col-lg-7 bg-grey position-relative\">\r\n    <form #signUpForm=\"ngForm\" class=\"pull-down\" (ngSubmit)=\"signUpUser(user)\">\r\n      <div class=\"form-input\">\r\n        <div class=\"d-flex flex-row\">\r\n          <label\r\n            class=\"col-lg-4 pl-0 pr-0 col-sm-12 font-weight-light\"\r\n            for=\"gender\"\r\n            >Gender</label\r\n          >\r\n          <div class=\"col-lg-4 pl-0 pr-0 col-sm-12\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"male\"\r\n              [(ngModel)]=\"user.gender\"\r\n              name=\"gender\"\r\n              value=\"male\"\r\n            />\r\n            <label class=\"font-weight-light ml-2\" for=\"male\">Male</label><br />\r\n          </div>\r\n          <div class=\"col-lg-4 pr-0 col-sm-12\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"female\"\r\n              [(ngModel)]=\"user.gender\"\r\n              name=\"gender\"\r\n              value=\"female\"\r\n            />\r\n            <label class=\"font-weight-light ml-2\" for=\"female\">Female</label\r\n            ><br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-input\">\r\n        <label class=\"mb-0\" class=\"font-weight-light\" for=\"name\">Name</label>\r\n        <div class=\"d-flex flex-row\">\r\n          <div class=\"col-lg-6 pl-0 pr-0 col-sm-12\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"First name\"\r\n              required\r\n              name=\"first-name\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"user.first_name\"\r\n            />\r\n          </div>\r\n          <div class=\"col-lg-6 pr-0 col-sm-12\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Last name\"\r\n              required\r\n              name=\"surname\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"user.surname\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-input\">\r\n        <label class=\"mb-0\" class=\"font-weight-light\" for=\"email\"\r\n          >Email Address</label\r\n        >\r\n        <input\r\n          id=\"email\"\r\n          placeholder=\"Type a valid email address\"\r\n          type=\"email\"\r\n          required\r\n          name=\"email\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"user.email\"\r\n        />\r\n      </div>\r\n      <div class=\"form-input\">\r\n        <label class=\"mb-0\" class=\"font-weight-light\" for=\"password\"\r\n          >Password</label\r\n        >\r\n        <div id=\"password\" class=\"d-flex flex-md-row flex-column\">\r\n          <div class=\"position-relative col-md-6 pl-0 pr-0 col-12\">\r\n            <input\r\n              placeholder=\"Type your password\"\r\n              type=\"password\"\r\n              required\r\n              name=\"password\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"user.password\"\r\n            />\r\n            <img\r\n              *ngIf=\"hidePassword\"\r\n              (click)=\"\r\n                hidePassword = authService.changePasswordState(\r\n                  hidePassword,\r\n                  $event,\r\n                  0\r\n                )\r\n              \"\r\n              class=\"password-reveal fade-in\"\r\n              src=\"./assets/images/icons/password-icon.svg\"\r\n            />\r\n            <img\r\n              *ngIf=\"!hidePassword\"\r\n              (click)=\"\r\n                hidePassword = authService.changePasswordState(\r\n                  hidePassword,\r\n                  $event,\r\n                  0\r\n                )\r\n              \"\r\n              class=\"password-reveal fade-in\"\r\n              src=\"./assets/images/icons/password-reveal-icon.svg\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"position-relative col-md-6 pl-0 pl-md-2 pt-2 pt-md-0 pr-0 col-12\"\r\n          >\r\n            <input\r\n              placeholder=\"Re-Type password\"\r\n              type=\"password\"\r\n              exactMatch=\"password\"\r\n              required\r\n              name=\"confrim-password\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"user.confirm_password\"\r\n            />\r\n            <img\r\n              *ngIf=\"hideConfirmPassword\"\r\n              (click)=\"\r\n                hideConfirmPassword = authService.changePasswordState(\r\n                  hideConfirmPassword,\r\n                  $event,\r\n                  0\r\n                )\r\n              \"\r\n              class=\"password-reveal fade-in\"\r\n              src=\"./assets/images/icons/password-icon.svg\"\r\n            />\r\n            <img\r\n              *ngIf=\"!hideConfirmPassword\"\r\n              (click)=\"\r\n                hideConfirmPassword = authService.changePasswordState(\r\n                  hideConfirmPassword,\r\n                  $event,\r\n                  0\r\n                )\r\n              \"\r\n              class=\"password-reveal fade-in\"\r\n              src=\"./assets/images/icons/password-reveal-icon.svg\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        [disabled]=\"!signUpForm.valid\"\r\n        class=\"btn bg-green-400 bg-success cta-btn\"\r\n      >\r\n        Sign up\r\n      </button>\r\n\r\n      <p class=\"pt-4\">\r\n        <small class=\"font-weight-light\"\r\n          >Already have an account?\r\n          <a [routerLink]=\"[routes.login]\" class=\"\"> Log in</a></small\r\n        >\r\n        <br />\r\n        <small class=\"font-weight-light\">\r\n          Forgot Password?\r\n          <a [routerLink]=\"[routes.forgot]\" class=\"\">\r\n            Click here to reset</a\r\n          ></small\r\n        >\r\n      </p>\r\n    </form>\r\n    <div id=\"loading-overlay\" *ngIf=\"submitting\">\r\n      <i class=\"fa fa-spinner edit fa-pulse fa-3x fa-fw\"> </i>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { AuthService, GeneralService } from \"../../@core\";\r\n\r\n@Component({\r\n  selector: \"app-verify-email\",\r\n  templateUrl: \"./verify-email.component.html\",\r\n  styleUrls: [\"./../auth/auth.component.scss\", \"./verify-email.component.scss\"],\r\n})\r\nexport class VerifyEmailComponent implements OnInit {\r\n  loading = true;\r\n  isVerified: boolean;\r\n  status = \"Please wait while we verify your email Address\";\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private generalService: GeneralService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.verify(params.code, params[\"email\"]);\r\n    });\r\n  }\r\n\r\n  verify(code: string, email) {\r\n    this.authService.showLoader(true);\r\n\r\n    this.authService.verifyRegistrationEmail({ code, email }).subscribe(\r\n      (data) => {\r\n        this.loading = false;\r\n        if (data.status._text != \"Failed\") {\r\n          this.isVerified = true;\r\n          this.authService.showLoader(false);\r\n          this.status = \"Hurray your email is now verified :)\";\r\n          this.toastr.success(\r\n            \"You will be redirected to the Login to access the portal\",\r\n            \"Email verified \",\r\n            {\r\n              timeOut: 15000,\r\n            }\r\n          );\r\n          setTimeout(() => {\r\n            this.router.navigate([\"/auth/login\"]);\r\n          }, 4000);\r\n        } else {\r\n          this.isVerified = false;\r\n          this.authService.showLoader(false);\r\n          this.status = \"Something went wrong during verification process\";\r\n          this.toastr.error(\r\n            data.status_message._text || \"Email Not Verified :(\",\r\n            \"Oops,\",\r\n            {\r\n              timeOut: 15000,\r\n            }\r\n          );\r\n        }\r\n      },\r\n      (error) => {\r\n        this.loading = false;\r\n        this.isVerified = false;\r\n        this.authService.showLoader(false);\r\n        this.status = \"Something went wrong during verification process\";\r\n        this.toastr.error(\r\n          error.error.message || \"Email Not Verified :(\",\r\n          \"Oops,\",\r\n          {\r\n            timeOut: 15000,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","\r\n<div class='fade-in-right'>\r\n\r\n  <h2 *ngIf='loading' class=\"text-center text-main text-center\" >Verifying your details.. </h2>\r\n    <h2 *ngIf='isVerified' class=\"text-center text-main text-center\" >Your email has been verified </h2>\r\n    <div class=\" position-relative\" >\r\n      <div *ngIf='!loading' class='text-center' >\r\n          <img *ngIf='isVerified' src=\"assets/images/verification-sent.svg\"  alt=\"verify image\">\r\n          <img *ngIf='!isVerified' src=\"assets/images/verification-failed.svg\"  alt=\"verify image\">\r\n        <p *ngIf='isVerified' class=\"text-main\" >Your Account Has been Activated</p>\r\n        <p *ngIf='!isVerified' class=\"text-main\" >Account activation was not successful\r\n          <!-- <button class=\"btn col-12 bg-main form-control\" >Resend</button> -->\r\n        </p>\r\n      </div>\r\n\r\n    </div>\r\n    <div *ngIf='loading' class=\"loader w-100 m-auto d-flex position-absolute\">\r\n        <i class=\"fas fa-circle-notch fa-3x fa-spin\"></i>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from '../../@core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlreadyLoggedInGuard implements CanActivate {\r\n  constructor(private router: Router,\r\n              private authService: AuthService) {\r\n\r\n  }\r\n  canActivate(next: ActivatedRouteSnapshot,\r\n              state: RouterStateSnapshot): boolean {\r\n      if (this.authService.getUserLocally()) {\r\n        this.router.navigate(['/page/']);\r\n        return false;\r\n        }\r\n\r\n      return true;\r\n  }\r\n\r\n}\r\n","export * from './already-logged-in/already-logged-in.guard';\r\nexport * from './auth/auth.guard';\r\n\r\n","export * from './user';","class GeneralAPIResponse {\r\n  status?: string;\r\n  status_message?: string;\r\n}\r\n\r\nexport class User extends GeneralAPIResponse {\r\n  user_id?: string;\r\n  token?: string;\r\n  email?: string;\r\n  password?: string;\r\n  newPassword?: string;\r\n  first_name?: string;\r\n  surname?: string;\r\n  gender?: string;\r\n  confirm_password?: string;\r\n}\r\n"],"sourceRoot":"webpack:///"}