{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/@core/auth.service.ts","webpack:///src/app/@core/general.service.ts","webpack:///src/app/@core/index.ts","webpack:///src/app/@core/interceptor.service.ts","webpack:///src/app/@guards/auth/auth.guard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/config.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthService","httpClient","generalService","_presentStateSource","state$","asObservable","loadingState","next","user","post","baseURL","objectToFormData","responseType","email","get","generateSearchQuery","forgotObj","shouldShowPassword","event","index","target","parentElement","children","type","subscribe","localStorage","removeItem","setItem","JSON","stringify","parse","getItem","token","providedIn","GeneralService","_contentInfoStateSource","contentInfoState$","_contentLikedStateSource","contentLikedState$","category","toLowerCase","data","model","searchQuery","Object","i","length","undefined","substring","obj","form","namespace","fd","FormData","formKey","property","hasOwnProperty","File","append","object","key","_text","xmlString","parser","DOMParser","compact","BasicAuthInterceptor","authService","request","method","currentUserToken","getUserToken","clone","url","includes","getUserLocally","user_id","handle","InvalidAuthInterceptor","router","toastr","route","hasTriggered","pipe","err","caught","status","logout","navigate","login","success","XMLtoJSONInterceptor","body","xmlToJson","AuthGuard","state","queryParams","returnUrl","routes","path","loadChildren","m","AuthModule","canActivate","canActivateChild","PageModule","pathMatch","redirectTo","AppRoutingModule","forRoot","useHash","imports","routedGuards","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","appRoutes","register","forgot","reset","completeProfile","personalizedContent","dashboard","searchPage","viewPlan","subscription","viewPackages","savedItems","singleSubscription","viewUserSubscription","settings","environment","production","countries","categoryTypes","ITMCA","itmca","irm","IRM","PEC","pec","iiet","IIET","paystackPubKey","document","addEventListener","console","log"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { User } from \"../@model/user\";\r\nimport { GeneralService } from \"./general.service\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AuthService {\r\n  private _presentStateSource = new BehaviorSubject<any>(false);\r\n  public state$ = this._presentStateSource.asObservable() as Observable<any>;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private generalService: GeneralService\r\n  ) {}\r\n\r\n  showLoader(loadingState) {\r\n    this._presentStateSource.next(loadingState);\r\n  }\r\n\r\n  /**\r\n   *  description: logs the user into the platform\r\n   */\r\n  login(user: any): Observable<any> {\r\n    return this.httpClient.post(\r\n      `${environment.baseURL}/member-login`,\r\n      this.generalService.objectToFormData(user),\r\n      <Object>{ responseType: \"text/xml\" }\r\n    ) as Observable<any>;\r\n  }\r\n\r\n  /**\r\n   *  description: Registers a user and sends a verification email in the format\r\n   */\r\n  signup(user: any): Observable<any> {\r\n    return this.httpClient.post(\r\n      `${environment.baseURL}/member-register`,\r\n      this.generalService.objectToFormData(user),\r\n      <Object>{ responseType: \"text/xml\" }\r\n    ) as Observable<any>;\r\n  }\r\n\r\n  /**\r\n   *  description: initailizes the process to reset password,\r\n   * sends a verification email in the format {base_url}/#/change_password/{adverisers_email}/{generated_code}\r\n   */\r\n  forgotPassword(email: string): Observable<any> {\r\n    return this.httpClient.get(\r\n      `${\r\n        environment.baseURL\r\n      }/forgot-password-request${this.generalService.generateSearchQuery({\r\n        email,\r\n      })}`,\r\n      <Object>{ responseType: \"text/xml\" }\r\n    ) as Observable<any>;\r\n  }\r\n\r\n  /**\r\n   *  description: resets the users password\r\n   */\r\n  resetPassword(forgotObj: {\r\n    pwd: string;\r\n    email: string;\r\n    code: string;\r\n  }): Observable<any> {\r\n    return this.httpClient.get(\r\n      `${\r\n        environment.baseURL\r\n      }/forgot-password-reset${this.generalService.generateSearchQuery(\r\n        forgotObj\r\n      )}`,\r\n      <Object>{ responseType: \"text/xml\" }\r\n    ) as Observable<any>;\r\n  }\r\n\r\n  /**\r\n   *  description: Verifies the users Email\r\n   */\r\n  verifyEmail(user: any): Observable<any> {\r\n    return this.httpClient.get(\r\n      `${\r\n        environment.baseURL\r\n      }/verify-token-request${this.generalService.generateSearchQuery(user)}`,\r\n      <Object>{ responseType: \"text/xml\" }\r\n    ) as Observable<any>;\r\n  }\r\n\r\n  /**\r\n   *  description: Verifies the users Email\r\n   */\r\n  verifyRegistrationEmail(user: any): Observable<any> {\r\n    return this.httpClient.get(\r\n      `${\r\n        environment.baseURL\r\n      }/email-verification${this.generalService.generateSearchQuery(user)}`,\r\n      <Object>{ responseType: \"text/xml\" }\r\n    ) as Observable<any>;\r\n  }\r\n\r\n  /**\r\n   *   Resends Verification Code to Users\r\n   */\r\n  resendVerification(email: string) {\r\n    return this.httpClient.get(\r\n      `${\r\n        environment.baseURL\r\n      }/resend-email-verification${this.generalService.generateSearchQuery({\r\n        email,\r\n      })}`,\r\n      <Object>{ responseType: \"text/xml\" }\r\n    ) as Observable<any>;\r\n  }\r\n\r\n  /**\r\n   * Changes the password type of the password field\r\n   * it has just 2 states either \"Hide\" or \"Show\"\r\n   * @param shouldShowPassword helps to know when to hide or show password\r\n   * @param $event the triggered event\r\n   * @param index presents the index of the input[type='password'] element in the parent\r\n   * @returns {boolean}\r\n   */\r\n  changePasswordState(shouldShowPassword: boolean, event, index = 1): boolean {\r\n    if (!shouldShowPassword) {\r\n      event.target.parentElement.children[index].type = \"password\";\r\n      return !shouldShowPassword;\r\n    }\r\n    event.target.parentElement.children[index].type = \"text\";\r\n    return !shouldShowPassword;\r\n  }\r\n\r\n  logout() {\r\n    this.httpClient\r\n      .get(`${environment.baseURL}/member-logout`, <Object>{\r\n        responseType: \"text/xml\",\r\n      })\r\n      .subscribe();\r\n    localStorage.removeItem(\"__nv2_t\");\r\n    localStorage.removeItem(\"__nv2_\");\r\n    localStorage.removeItem(\"__onboard\");\r\n  }\r\n\r\n  saveUserLocally(user): any {\r\n    localStorage.setItem(\"__nv2_\", JSON.stringify(user));\r\n  }\r\n\r\n  getUserLocally(): any {\r\n    return JSON.parse(localStorage.getItem(\"__nv2_\"));\r\n  }\r\n\r\n  saveUserToken(token: string): any {\r\n    localStorage.setItem(\"__nv2_t\", token);\r\n  }\r\n\r\n  getUserToken(): any {\r\n    return localStorage.getItem(\"__nv2_t\");\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { of, BehaviorSubject, Observable, Subject } from \"rxjs\";\r\nimport * as xml2json from \"xml-js\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class GeneralService {\r\n  private _presentStateSource = new BehaviorSubject<any>(false);\r\n  public state$ = this._presentStateSource.asObservable() as Observable<any>;\r\n\r\n  private _contentInfoStateSource = new BehaviorSubject<any>({});\r\n  public contentInfoState$ = this._contentInfoStateSource.asObservable() as Observable<\r\n    any\r\n  >;\r\n\r\n  private _contentLikedStateSource = new Subject<any>();\r\n  public contentLikedState$ = this._contentLikedStateSource.asObservable() as Observable<\r\n    any\r\n  >;\r\n\r\n  constructor() {}\r\n\r\n  likeContent() {\r\n    this._contentLikedStateSource.next(true);\r\n  }\r\n\r\n  showLoader(loadingState) {\r\n    this._presentStateSource.next(loadingState);\r\n  }\r\n\r\n  getInnovativeContentBadgeColor(category: string) {\r\n    switch (category.toLowerCase()) {\r\n      case \"itmca\":\r\n        return \"bg-multimedia\";\r\n\r\n      case \"irm\":\r\n        return \"bg-warning\";\r\n      case \"pec\":\r\n        return \"bg-orange\";\r\n\r\n      case \"iiet\":\r\n        return \"bg-info\";\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  pingContentSource(data) {\r\n    this._contentInfoStateSource.next(data);\r\n  }\r\n\r\n  /**\r\n   * Converts an Object in a string of query parameters\r\n   * @param model its the object or model that is transalated to query params\r\n   */\r\n  generateSearchQuery(model: any): string {\r\n    let keys;\r\n    let searchQuery = \"\";\r\n    if (model) {\r\n      keys = Object.keys(model);\r\n\r\n      for (let i = 0; keys.length > i; i++) {\r\n        if (model[keys[i]] !== undefined) {\r\n          if (model[keys[i]] !== \"\") {\r\n            searchQuery += \"&\" + keys[i] + \"=\" + model[keys[i]];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return \"?\" + searchQuery.substring(1, searchQuery.length + 1);\r\n  }\r\n\r\n  /**\r\n   * Converts a JSON object to FormData\r\n   * @param obj this is a JSON obj that should be converted to formdata\r\n   * @param form the formdata obj itself will be used for recursive call\r\n   * @param namespace this is the property name of the form data\r\n   */\r\n  public objectToFormData(obj: JSON, form?: any, namespace?: string): FormData {\r\n    const fd = form || new FormData();\r\n    let formKey;\r\n    for (const property in obj) {\r\n      if (obj.hasOwnProperty(property)) {\r\n        if (namespace) {\r\n          formKey = namespace + \"[\" + property + \"]\";\r\n        } else {\r\n          formKey = property;\r\n        }\r\n        if (\r\n          typeof obj[property] === \"object\" &&\r\n          !(obj[property] instanceof File)\r\n        ) {\r\n          this.objectToFormData(obj[property], fd, property);\r\n        } else {\r\n          fd.append(formKey, obj[property]);\r\n        }\r\n      }\r\n    }\r\n    return fd;\r\n  }\r\n\r\n  convertToOneLayerViewModel(object) {\r\n    for (const key in object) {\r\n      if (object.hasOwnProperty(key)) {\r\n        object[key] = object[key]?._text;\r\n      }\r\n    }\r\n    return object;\r\n  }\r\n\r\n  // Changes XML to JSON\r\n  xmlToJson(xmlString) {\r\n    if (!xmlString) return {};\r\n    try {\r\n      return JSON.parse(xmlString);\r\n    } catch {\r\n      const parser = new DOMParser();\r\n      const obj = xml2json.xml2json(xmlString, { compact: true });\r\n      return JSON.parse(obj)[\"response\"];\r\n    }\r\n\r\n    // Create the return object\r\n\r\n    // let obj = {};\r\n\r\n    // if (xml.nodeType == 1) { // element\r\n    //   // do attributes\r\n    //   if (xml.attributes.length > 0) {\r\n    //     obj['@attributes'] = {};\r\n    //     for (let j = 0; j < xml.attributes.length; j++) {\r\n    //         const attribute = xml.attributes.item(j);\r\n    //         obj['@attributes'][attribute.nodeName] = attribute.nodeValue;\r\n    //       }\r\n    //   }\r\n    // } else if (xml.nodeType == 3) { // text\r\n    //   obj = xml.nodeValue;\r\n    // }\r\n\r\n    // // do children\r\n    // if (xml.hasChildNodes()) {\r\n    //   for (let i = 0; i < xml.childNodes.length; i++) {\r\n    //     const item = xml.childNodes.item(i);\r\n    //     const nodeName = item.nodeName;\r\n    //     if (typeof(obj[nodeName]) == 'undefined') {\r\n    //       obj[nodeName] = this.xmlToJson(item);\r\n    //     } else {\r\n    //       if (typeof(obj[nodeName].push) == 'undefined') {\r\n    //         const old = obj[nodeName];\r\n    //         obj[nodeName] = [];\r\n    //         obj[nodeName].push(old);\r\n    //       }\r\n    //       obj[nodeName].push(this.xmlToJson(item));\r\n    //     }\r\n    //   }\r\n    // }\r\n    // debugger;\r\n    //  return obj;\r\n  }\r\n}\r\n","export * from './auth.service';\r\nexport * from './general.service'","// import { MatDialog } from \"@angular/material/dialog\";\r\n\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { GeneralService } from \"./general.service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n  HttpParams,\r\n} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, catchError, tap, flatMap } from \"rxjs/operators\";\r\nimport { AuthService } from \".\";\r\nimport { appRoutes } from \"../config\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Injectable()\r\nexport class BasicAuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // add authorization header with basic auth credentials if available\r\n    // debugger;\r\n    if (request.method.toLowerCase() === \"get\") {\r\n      const currentUserToken = this.authService.getUserToken();\r\n      if (currentUserToken) {\r\n        request = request.clone({\r\n          url: `${request.url}${\r\n            request.url.includes(\"?\") ? \"&\" : \"?\"\r\n          }token=${currentUserToken}&user_id=${\r\n            this.authService.getUserLocally().user_id\r\n          }`,\r\n        });\r\n      }\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class InvalidAuthInterceptor implements HttpInterceptor {\r\n  hasTriggered = false;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError((err: any, caught) => {\r\n        if (err instanceof HttpErrorResponse) {\r\n          if (err.status === 401) {\r\n            if (!this.hasTriggered) {\r\n              // this.dialog.closeAll();\r\n              this.authService.logout();\r\n              this.router.navigate([appRoutes.login]);\r\n              this.hasTriggered = true;\r\n              this.toastr.success(\"You are logged out\");\r\n            }\r\n          } else return next.handle(request);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class XMLtoJSONInterceptor implements HttpInterceptor {\r\n  constructor(private generalService: GeneralService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      map((event) => {\r\n        if (event instanceof HttpResponse) {\r\n          event = event.clone({\r\n            body: this.generalService.xmlToJson(event.body),\r\n          });\r\n        }\r\n        return event;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n  CanActivateChild,\r\n} from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"../../@core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n  constructor(private router: Router, private authService: AuthService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authService.getUserLocally()) {\r\n      return true;\r\n    }\r\n    this.router.navigate([\"auth/login\"], {\r\n      queryParams: { returnUrl: state.url },\r\n    });\r\n    return false;\r\n  }\r\n\r\n  canActivateChild(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    if (this.authService.getUserLocally()) {\r\n      return true;\r\n    }\r\n    this.router.navigate([\"auth/login\"], {\r\n      queryParams: { returnUrl: state.url },\r\n    });\r\n    return false;\r\n  }\r\n}\r\n","import { AuthGuard } from \"./@guards/auth/auth.guard\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule, CanActivate } from \"@angular/router\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"auth\",\r\n    loadChildren: () => import(\"./@auth/auth.module\").then((m) => m.AuthModule),\r\n  },\r\n  {\r\n    path: \"page\",\r\n    canActivate: [AuthGuard],\r\n    canActivateChild: [AuthGuard],\r\n    loadChildren: () => import(\"./@page/page.module\").then((m) => m.PageModule),\r\n  },\r\n  { path: \"\", pathMatch: \"full\", redirectTo: \"auth\" },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n\r\nexport const routedGuards = [AuthGuard];\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'nigenius-v2';\r\n}\r\n","\r\n<router-outlet></router-outlet>","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { AppRoutingModule, routedGuards } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { ToastrModule } from \"ngx-toastr\";\r\nimport {\r\n  XMLtoJSONInterceptor,\r\n  BasicAuthInterceptor,\r\n  InvalidAuthInterceptor,\r\n} from \"./@core/interceptor.service\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { JoyrideModule } from \"ngx-joyride\";\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MatRadioModule,\r\n    ToastrModule.forRoot(),\r\n    JoyrideModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: XMLtoJSONInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: InvalidAuthInterceptor,\r\n      multi: true,\r\n    },\r\n    ...routedGuards,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","export const appRoutes = {\r\n  register: \"/auth/register\",\r\n  login: \"/auth/login\",\r\n  forgot: \"/auth/forgot-password\",\r\n  reset: \"/auth/reset\",\r\n  completeProfile: \"/page/complete-profile\",\r\n  personalizedContent: \"/page/personalized-contents\",\r\n  dashboard: \"/page/s/dashboard\",\r\n  searchPage: \"/page/s/search-result\",\r\n  viewPlan: \"/page/s/search\",\r\n  subscription: \"/page/subscription\",\r\n  viewPackages: \"/page/subscription/packages\",\r\n  savedItems: \"/page/saved-items\",\r\n  singleSubscription: \"/page/subscription/package\",\r\n  viewUserSubscription: \"/page/subscription/subscription-details\",\r\n  settings: \"/page/settings\",\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.jso`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n  baseURL: \"http://eritlpta.test:8080/apiapp/index.php/api/v2\",\r\n  countries: [\r\n    \"Abia\",\r\n    \"Adamawa\",\r\n    \"Akwa Ibom\",\r\n    \"Anambra\",\r\n    \"Bauchi\",\r\n    \"Bayelsa\",\r\n    \"Benue\",\r\n    \"Borno\",\r\n    \"Cross River\",\r\n    \"Delta\",\r\n    \"Ebonyi\",\r\n    \"Edo\",\r\n    \"Ekiti\",\r\n    \"Enugu\",\r\n    \"FCT - Abuja\",\r\n    \"Gombe\",\r\n    \"Imo\",\r\n    \"Jigawa\",\r\n    \"Kaduna\",\r\n    \"Kano\",\r\n    \"Katsina\",\r\n    \"Kebbi\",\r\n    \"Kogi\",\r\n    \"Kwara\",\r\n    \"Lagos\",\r\n    \"Nasarawa\",\r\n    \"Niger\",\r\n    \"Ogun\",\r\n    \"Ondo\",\r\n    \"Osun\",\r\n    \"Oyo\",\r\n    \"Plateau\",\r\n    \"Rivers\",\r\n    \"Sokoto\",\r\n    \"Taraba\",\r\n    \"Yobe\",\r\n    \"Zamfara\",\r\n  ],\r\n  categoryTypes: {\r\n    \"lesson plan\": \"Lesson Plan\",\r\n    \"Lesson plan\": \"Lesson Plan\",\r\n    \"Lesson Plan\": \"Lesson Plan\",\r\n    ITMCA: \"Multimedia\",\r\n    itmca: \"Multimedia\",\r\n    irm: \"Innovative Topics\",\r\n    IRM: \"Innovative Topics\",\r\n    PEC: \"Projects\",\r\n    pec: \"Projects\",\r\n    iiet: \"Innovative Teaching\",\r\n    IIET: \"Innovative Teaching\",\r\n  },\r\n  paystackPubKey: \"pk_test_d4a4a864d1a8589c39edc2d90917224868bd763a\",\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import \"hammerjs\";\r\nimport { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\n\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  platformBrowserDynamic()\r\n    .bootstrapModule(AppModule)\r\n    .catch((err) => console.log(err));\r\n});\r\n"]}