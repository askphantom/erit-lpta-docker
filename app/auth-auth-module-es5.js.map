{"version":3,"sources":["webpack:///src/app/@auth/auth.module.ts","webpack:///src/app/@auth/auth.routing.module.ts","webpack:///src/app/@auth/auth/auth.component.ts","webpack:///src/app/@auth/auth/auth.component.html","webpack:///src/app/@auth/change-password/change-password.component.ts","webpack:///src/app/@auth/change-password/change-password.component.html","webpack:///src/app/@auth/forgot-password/forgot-password.component.ts","webpack:///src/app/@auth/forgot-password/forgot-password.component.html","webpack:///src/app/@auth/index.ts","webpack:///src/app/@auth/login/login.component.ts","webpack:///src/app/@auth/login/login.component.html","webpack:///src/app/@auth/signup/signup.component.ts","webpack:///src/app/@auth/signup/signup.component.html","webpack:///src/app/@auth/verify-email/verify-email.component.ts","webpack:///src/app/@auth/verify-email/verify-email.component.html","webpack:///src/app/@guards/already-logged-in/already-logged-in.guard.ts","webpack:///src/app/@guards/index.ts","webpack:///src/app/@model/index.ts","webpack:///src/app/@model/user.ts"],"names":["AuthModule","imports","exports","declarations","schemas","providers","routes","path","component","children","canActivate","pathMatch","redirectTo","AuthRoutingModule","forChild","routedComponent","usedGuards","AuthComponent","authService","loading","checkForLoadingState","loadingSubscription","state$","subscribe","arg","unsubscribe","selector","templateUrl","styleUrls","ChangePasswordComponent","toastr","router","generalService","route","user","hidePassword","hideConfirmPassword","queryParams","params","code","email","verify","showLoader","resetPassword","pwd","password","data","status","_text","success","navigate","error","status_message","message","timeOut","verifyEmail","isVerified","ForgotPasswordComponent","submitting","forgotPassword","LoginComponent","getReturnUrl","queryParamMap","param","returnUrl","get","login","convertToOneLayerViewModel","resendVerification","info","response","saveUserLocally","saveUserToken","token","navigateByUrl","clear","xmlToJson","loginUser","SignupComponent","getSubscriptionPackageId","packageID","confirmpassword","package_id","signup","signUpUser","VerifyEmailComponent","verifyRegistrationEmail","setTimeout","AlreadyLoggedInGuard","next","state","getUserLocally","providedIn","GeneralAPIResponse","User"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["\r\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport {AuthRoutingModule, routedComponent} from './auth.routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ValidatorsModule } from '../validators/validators.module';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n@NgModule({\r\n    imports: [CommonModule,\r\n                AuthRoutingModule,\r\n                FormsModule,\r\n                ValidatorsModule,\r\n                MatRadioModule\r\n            ],\r\n    exports: [],\r\n    declarations: [AuthComponent, ...routedComponent ],\r\n    schemas: [],\r\n    providers: [],\r\n})\r\nexport class AuthModule { }\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport {\r\n  AuthComponent,\r\n  LoginComponent,\r\n  SignupComponent,\r\n  ChangePasswordComponent,\r\n  ForgotPasswordComponent,\r\n  VerifyEmailComponent,\r\n} from \".\";\r\nimport { AlreadyLoggedInGuard } from \"../@guards\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: \"register\",\r\n        component: SignupComponent,\r\n        canActivate: [AlreadyLoggedInGuard],\r\n      },\r\n      {\r\n        path: \"login\",\r\n        component: LoginComponent,\r\n        canActivate: [AlreadyLoggedInGuard],\r\n      },\r\n      {\r\n        path: \"forgot-password\",\r\n        component: ForgotPasswordComponent,\r\n        canActivate: [AlreadyLoggedInGuard],\r\n      },\r\n      { path: \"reset-password\", component: ChangePasswordComponent },\r\n      { path: \"email-verification\", component: VerifyEmailComponent },\r\n      { path: \"verify\", component: VerifyEmailComponent },\r\n      // { path: 'verification-sent/:email', component: VerificationSentComponent },\r\n      { path: \"\", pathMatch: \"full\", redirectTo: \"login\" },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\nexport const routedComponent = [\r\n  AuthComponent,\r\n  SignupComponent,\r\n  LoginComponent,\r\n  VerifyEmailComponent,\r\n  ForgotPasswordComponent,\r\n  ChangePasswordComponent,\r\n  // VerificationSentComponent\r\n];\r\n\r\nexport const usedGuards = [AlreadyLoggedInGuard];\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AuthService } from '../../@core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit, OnDestroy {\r\n  title: string;\r\n  loading = false;\r\n  loadingSubscription: Subscription;\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.checkForLoadingState();\r\n  }\r\n\r\n  checkForLoadingState() {\r\n   this.loadingSubscription =  this.authService.state$\r\n                  .subscribe(arg => this.loading = arg);\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n      this.loadingSubscription.unsubscribe();\r\n  }\r\n  \r\n\r\n}\r\n","<div id=\"container\">\r\n  <div class=\"d-flex flex-column main-box position-relative\">\r\n    <!-- <header></header> -->\r\n    <div class=\"auth-card m-md-auto m-0\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AuthService } from \"../../@core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { User } from \"../../@model\";\r\nimport { GeneralService } from \"../../@core/general.service\";\r\n\r\n@Component({\r\n  selector: \"app-change-password\",\r\n  templateUrl: \"./change-password.component.html\",\r\n  styleUrls: [\r\n    \"./../auth/auth.component.scss\",\r\n    \"./../forgot-password/forgot-password.component.scss\",\r\n    \"./../verify-email/verify-email.component.scss\",\r\n    \"./change-password.component.scss\",\r\n  ],\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  loading = true;\r\n  isVerified: boolean;\r\n\r\n  user = new User();\r\n  code: string;\r\n  email: any;\r\n  hidePassword = true;\r\n  hideConfirmPassword = true;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    private generalService: GeneralService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.code = params.code;\r\n      this.email = params[\"email\"];\r\n      this.verify(params.code, params[\"email\"]);\r\n    });\r\n  }\r\n\r\n  reset(user) {\r\n    this.loading = true;\r\n    this.authService.showLoader(true);\r\n    this.authService\r\n      .resetPassword({ code: this.code, pwd: user.password, email: this.email })\r\n      .subscribe(\r\n        (data) => {\r\n          this.loading = false;\r\n          this.authService.showLoader(false);\r\n          if (data.status._text != \"Failed\") {\r\n            this.toastr.success(\r\n              \"Your password has been reset, Kindly Login \",\r\n              \"Success \"\r\n            );\r\n            this.router.navigate([\"/auth/login\"]);\r\n          } else {\r\n            this.toastr.error(data.status_message._text, \"Oops\");\r\n          }\r\n        },\r\n        (error) => {\r\n          this.loading = false;\r\n          this.authService.showLoader(false);\r\n          this.toastr.error(\r\n            error.error.message || error.message || error,\r\n            \"Oops\",\r\n            {\r\n              timeOut: 15000,\r\n            }\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  verify(code, email) {\r\n    this.authService.showLoader(true);\r\n    this.authService.verifyEmail({ code, email }).subscribe(\r\n      (data) => {\r\n        this.loading = false;\r\n        this.authService.showLoader(false);\r\n\r\n        if (data.status._text != \"Failed\") {\r\n          this.isVerified = true;\r\n        } else {\r\n          this.toastr.error(data.status_message._text, \"Oops\");\r\n          this.isVerified = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.isVerified = false;\r\n        this.authService.showLoader(false);\r\n        this.loading = false;\r\n        this.toastr.error(\"Mail not verified\", \"\", {\r\n          timeOut: 15000,\r\n        });\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"auth-box d-flex flex-column flex-md-row\">\r\n  <div class=\"col-md-5 p-2 p-md-4 d-flex flex-column\">\r\n    <h2\r\n      class=\"font-weight-medium text-green-400 font-weight-med mt-md-5 mt-1 mb-2 text-md-center\"\r\n    >\r\n      Reset Password?\r\n    </h2>\r\n    <img\r\n      src=\"./assets/images/forgot-password.svg\"\r\n      class=\"mt-md-5 mt-1 mr-auto mr-md-0 align-self-center\"\r\n      alt=\"nigenius logo\"\r\n      srcset=\"\"\r\n    />\r\n  </div>\r\n  <div class=\"col-md-7 pl-3 pt-0 pt-md-3 p-md-4 bg-grey position-relative\">\r\n    <form\r\n      *ngIf=\"isVerified\"\r\n      #resetPasswordForm=\"ngForm\"\r\n      class=\"mt-5\"\r\n      (ngSubmit)=\"reset(user)\"\r\n    >\r\n      <div class=\"form-input mt-md-5 mt-2 pt-md-4 pt-2\">\r\n        <label class=\"mb-0\" for=\"password\">New Password</label>\r\n        <div class=\"position-relative\">\r\n          <input\r\n            id=\"password\"\r\n            placeholder=\"Type your password\"\r\n            type=\"password\"\r\n            required\r\n            name=\"password\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"user.password\"\r\n          />\r\n          <img\r\n            *ngIf=\"hidePassword\"\r\n            (click)=\"\r\n              hidePassword = authService.changePasswordState(\r\n                hidePassword,\r\n                $event,\r\n                0\r\n              )\r\n            \"\r\n            class=\"password-reveal fade-in\"\r\n            src=\"./assets/images/icons/password-icon.svg\"\r\n          />\r\n          <img\r\n            *ngIf=\"!hidePassword\"\r\n            (click)=\"\r\n              hidePassword = authService.changePasswordState(\r\n                hidePassword,\r\n                $event,\r\n                0\r\n              )\r\n            \"\r\n            class=\"password-reveal fade-in\"\r\n            src=\"./assets/images/icons/password-reveal-icon.svg\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-input\">\r\n        <label for=\"confirm-password\">Confirm Password</label>\r\n        <div class=\"position-relative\">\r\n          <input\r\n            id=\"confirm-password\"\r\n            placeholder=\"Re-Type password\"\r\n            type=\"password\"\r\n            exactMatch=\"password\"\r\n            required\r\n            name=\"confrim-password\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"user.confirm_password\"\r\n          />\r\n          <img\r\n            *ngIf=\"hideConfirmPassword\"\r\n            (click)=\"\r\n              hideConfirmPassword = authService.changePasswordState(\r\n                hideConfirmPassword,\r\n                $event,\r\n                0\r\n              )\r\n            \"\r\n            class=\"password-reveal fade-in\"\r\n            src=\"./assets/images/icons/password-icon.svg\"\r\n          />\r\n          <img\r\n            *ngIf=\"!hideConfirmPassword\"\r\n            (click)=\"\r\n              hideConfirmPassword = authService.changePasswordState(\r\n                hideConfirmPassword,\r\n                $event,\r\n                0\r\n              )\r\n            \"\r\n            class=\"password-reveal fade-in\"\r\n            src=\"./assets/images/icons/password-reveal-icon.svg\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        [disabled]=\"!resetPasswordForm.valid\"\r\n        class=\"btn bg-success bg-green-400 bg-success\"\r\n      >\r\n        Send Reset Link\r\n      </button>\r\n    </form>\r\n    <div *ngIf=\"!isVerified\">\r\n      <img src=\"assets/images/verify-{{ isVerified }}.svg\" alt=\"verify image\" />\r\n\r\n      <p class=\"text-main\">Account verification was not successful</p>\r\n    </div>\r\n\r\n    <div id=\"loading-overlay\" *ngIf=\"loading\">\r\n      <i class=\"fa fa-spinner edit fa-pulse fa-3x fa-fw\"> </i>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { User } from \"../../@model\";\r\nimport { AuthService } from \"../../@core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { GeneralService } from \"../../@core\";\r\nimport { appRoutes } from \"src/app/config\";\r\n\r\n@Component({\r\n  selector: \"app-verify\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\r\n    \"./../auth/auth.component.scss\",\r\n    \"./forgot-password.component.scss\",\r\n  ],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  email: string;\r\n  submitting: boolean;\r\n  routes = appRoutes;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  resetPassword(email: string) {\r\n    this.authService.showLoader(true);\r\n    this.submitting = true;\r\n    this.authService.forgotPassword(email).subscribe(\r\n      (data) => {\r\n        this.submitting = false;\r\n        this.authService.showLoader(false);\r\n        if (data.status._text != \"Failed\") {\r\n          this.toastr.success(\r\n            \"A reset link will be sent to the provided email address in less than 5 minutes, check your inbox and spam folder\",\r\n            \":)\",\r\n            {\r\n              timeOut: 15000,\r\n            }\r\n          );\r\n        } else {\r\n          this.toastr.error(data.status_message._text, \"Oops\");\r\n        }\r\n      },\r\n      (error) => {\r\n        this.submitting = false;\r\n        this.authService.showLoader(false);\r\n        this.toastr.error(\r\n          error.error.message || error.message || error || error,\r\n          \"Oops!!\"\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"auth-box d-flex flex-column flex-md-row\">\r\n  <div class=\"col-md-5 p-2 p-md-4 d-flex flex-column\">\r\n    <h2\r\n      class=\"font-weight-medium text-green-400 font-weight-med mt-md-5 mt-1 mb-2 text-md-center\"\r\n    >\r\n      Forgot Password?\r\n    </h2>\r\n    <img\r\n      src=\"./assets/images/forgot-password.svg\"\r\n      class=\"mt-md-5 mt-1 mr-auto mr-md-0 align-self-center\"\r\n      alt=\"nigenius logo\"\r\n      srcset=\"\"\r\n    />\r\n  </div>\r\n  <div class=\"col-md-7 pl-3 pt-0 pt-md-3 p-md-4 bg-grey position-relative\">\r\n    <form\r\n      #forgotPasswordForm=\"ngForm\"\r\n      class=\"mt-md-5 mt-1\"\r\n      (ngSubmit)=\"resetPassword(email)\"\r\n    >\r\n      <div class=\"form-input mt-md-5 mt-2 pt-md-4 pt-2\">\r\n        <label class=\"mb-0\" class=\"font-weight-light\" for=\"email\"\r\n          >Don't worry, happens to the best of us.</label\r\n        >\r\n        <input\r\n          id=\"email\"\r\n          placeholder=\"Type your registered email Address\"\r\n          type=\"email\"\r\n          required\r\n          name=\"email\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"email\"\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        [disabled]=\"!forgotPasswordForm.valid\"\r\n        class=\"btn bg-green-400 bg-success\"\r\n      >\r\n        Send Reset Link\r\n      </button>\r\n\r\n      <p class=\"pt-4\">\r\n        <small class=\"font-weight-light\"\r\n          >Back to <a [routerLink]=\"[routes.login]\" class=\"\"> Log in </a></small\r\n        >\r\n        <br />\r\n        <small class=\"font-weight-light\">\r\n          Don't have an account yet?\r\n          <a [routerLink]=\"[routes.register]\" class=\"\"> Create one </a></small\r\n        >\r\n      </p>\r\n    </form>\r\n    <div id=\"loading-overlay\" *ngIf=\"submitting\">\r\n      <i class=\"fa fa-spinner edit fa-pulse fa-3x fa-fw\"> </i>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export * from './auth/auth.component';\r\nexport * from './login/login.component';\r\nexport * from './signup/signup.component';\r\nexport * from './forgot-password/forgot-password.component';\r\nexport * from './verify-email/verify-email.component';\r\nexport * from './change-password/change-password.component';\r\n// export * from './verification-sent/verification-sent.component';\r\n\r\n","import { GeneralService } from \"src/app/@core\";\r\nimport { Component, OnInit, ViewContainerRef, ViewChild } from \"@angular/core\";\r\nimport { User } from \"../../@model\";\r\nimport { AuthService } from \"../../@core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { appRoutes } from \"src/app/config\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./../auth/auth.component.scss\", \"./login.component.scss\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  submitting: boolean;\r\n  hidePassword = true;\r\n  user = new User();\r\n  routes = appRoutes;\r\n  returnUrl: string;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private generalService: GeneralService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getReturnUrl();\r\n  }\r\n\r\n  getReturnUrl() {\r\n    this.route.queryParamMap.subscribe((param) => {\r\n      this.returnUrl = param.get(\"returnUrl\");\r\n    });\r\n  }\r\n\r\n  loginUser(user) {\r\n    this.submitting = true;\r\n    this.authService.showLoader(true);\r\n    this.authService.login(user).subscribe(\r\n      (data) => {\r\n        this.submitting = false;\r\n\r\n        data = this.generalService.convertToOneLayerViewModel(data);\r\n        this.authService.showLoader(false);\r\n        // debugger;\r\n        if (data.status === \"EmailUnverified\") {\r\n          this.authService.resendVerification(user.email).subscribe(\r\n            (data) => {\r\n              if (data.status != \"Failed\") {\r\n                this.toastr.info(\r\n                  data.status_message._text,\r\n                  \"Email not verified\",\r\n                  { timeOut: 100000000 }\r\n                );\r\n              }\r\n            },\r\n            (error) => {\r\n              this.submitting = false;\r\n              this.authService.showLoader(false);\r\n              this.toastr.error(\r\n                error.error.response.message || error.message || error,\r\n                \"Oops\"\r\n              );\r\n            }\r\n          );\r\n        } else if (data.status === \"Success\") {\r\n          delete data.status;\r\n          delete data.status_message;\r\n          this.authService.saveUserLocally(data);\r\n          this.authService.saveUserToken(data.token);\r\n          if (this.returnUrl) {\r\n            this.router.navigateByUrl(this.returnUrl);\r\n          } else {\r\n            this.router.navigate([\"./page/\"]);\r\n          }\r\n          this.toastr.clear();\r\n          this.toastr.success(\"You are In!\");\r\n        } else {\r\n          this.toastr.error(data.status_message, \"Oops\");\r\n        }\r\n\r\n        // } else {\r\n        //   this.toastr.error(data.message, 'Oops');\r\n        // }\r\n      },\r\n      (error) => {\r\n        try {\r\n          error = this.generalService.xmlToJson(error.error);\r\n          this.submitting = false;\r\n          this.authService.showLoader(false);\r\n          this.toastr.error(\r\n            error.status_message._text ||\r\n              \"Something went wrong when trying to create a user\"\r\n          );\r\n        } catch (error) {\r\n          this.submitting = false;\r\n          this.authService.showLoader(false);\r\n          this.toastr.error(\r\n            \"Something went wrong when trying to create a user\"\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"auth-box d-flex flex-column flex-md-row\">\r\n  <div class=\"col-lg-5 d-flex bg-img flex-column align-items-start\">\r\n    <div>\r\n      <img\r\n        src=\"./assets/images/logo-white.png\"\r\n        class=\"mt-auto d-flex d-md-none\"\r\n        alt=\"nigenius logo\"\r\n        srcset=\"\"\r\n      />\r\n      <h1 class=\"text-white font-weight-medium font-weight-med mt-4\">Login</h1>\r\n      <h5 class=\"font-weight-thin text-white\">\r\n        Pick up from where you left off.\r\n      </h5>\r\n    </div>\r\n    <img\r\n      src=\"./assets/images/logo-white.png\"\r\n      class=\"mt-auto d-none d-md-flex\"\r\n      alt=\"nigenius logo\"\r\n      srcset=\"\"\r\n    />\r\n  </div>\r\n  <div\r\n    class=\"col-lg-7 bg-grey position-relative d-flex align-items-center pb-0 pt-5\"\r\n  >\r\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"loginUser(user)\">\r\n      <div class=\"form-input\">\r\n        <label class=\"mb-0\" class=\"font-weight-light\" for=\"email\"\r\n          >Email address</label\r\n        >\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          required\r\n          name=\"email\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"user.email\"\r\n        />\r\n      </div>\r\n      <div class=\"form-input position-relative\">\r\n        <label class=\"mb-0\" class=\"font-weight-light\" for=\"password\"\r\n          >Password</label\r\n        >\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          required\r\n          name=\"password\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"user.password\"\r\n        />\r\n        <img\r\n          *ngIf=\"hidePassword\"\r\n          (click)=\"\r\n            hidePassword = authService.changePasswordState(hidePassword, $event)\r\n          \"\r\n          class=\"password-reveal fade-in\"\r\n          src=\"./assets/images/icons/password-icon.svg\"\r\n        />\r\n        <img\r\n          *ngIf=\"!hidePassword\"\r\n          (click)=\"\r\n            hidePassword = authService.changePasswordState(hidePassword, $event)\r\n          \"\r\n          class=\"password-reveal fade-in\"\r\n          src=\"./assets/images/icons/password-reveal-icon.svg\"\r\n        />\r\n      </div>\r\n      <button\r\n        [disabled]=\"!loginForm.valid\"\r\n        class=\"btn bg-green-400 bg-success cta-btn\"\r\n      >\r\n        Log In\r\n      </button>\r\n\r\n      <p class=\"pt-4\">\r\n        <small class=\"font-weight-light\"\r\n          >Don't have an account yet?\r\n          <a [routerLink]=\"[routes.register]\"> Create one</a></small\r\n        >\r\n        <br />\r\n        <small class=\"font-weight-light\">\r\n          Forgot Password?\r\n          <a [routerLink]=\"[routes.forgot]\" class=\"\">\r\n            Click here to reset</a\r\n          ></small\r\n        >\r\n      </p>\r\n    </form>\r\n    <div id=\"loading-overlay\" *ngIf=\"submitting\">\r\n      <i class=\"fa fa-spinner edit fa-pulse fa-3x fa-fw\"> </i>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { GeneralService } from \"src/app/@core\";\r\nimport { Component, OnInit, ViewChild, TemplateRef } from \"@angular/core\";\r\nimport { Validators } from \"@angular/forms\";\r\nimport { User } from \"../../@model\";\r\nimport { AuthService } from \"../../@core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { appRoutes } from \"src/app/config\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\r\n    \"./../auth/auth.component.scss\",\r\n    \"./../login/login.component.scss\",\r\n    \"./signup.component.scss\",\r\n  ],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  routes = appRoutes;\r\n  user = new User();\r\n  submitting = false;\r\n  currencies: any[];\r\n  hidePassword = true;\r\n  hideConfirmPassword = true;\r\n  packageID: string;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private generalService: GeneralService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getSubscriptionPackageId();\r\n  }\r\n\r\n  getSubscriptionPackageId() {\r\n    this.route.queryParamMap.subscribe((param) => {\r\n      this.packageID = param.get(\"sub\");\r\n    });\r\n  }\r\n\r\n  signUpUser(user: any) {\r\n    this.authService.showLoader(true);\r\n    this.submitting = true;\r\n    delete user.confirmpassword;\r\n    if (this.packageID) {\r\n      user.package_id = this.packageID;\r\n    }\r\n    this.authService.signup(user).subscribe(\r\n      (data) => {\r\n        this.submitting = false;\r\n        this.authService.showLoader(false);\r\n\r\n        if (data.status._text != \"Failed\") {\r\n          this.toastr.success(\r\n            \"You're in, check your email, we will send you a verification link in less than 5 minutes, check your inbox and spam folder :)\",\r\n            \"\",\r\n            { timeOut: 100000000 }\r\n          );\r\n\r\n          // this.router.navigate(['./page/']);\r\n        } else {\r\n          this.toastr.error(data.status_message._text, \"Oops\");\r\n        }\r\n      },\r\n      (error) => {\r\n        try {\r\n          error = this.generalService.xmlToJson(error.error);\r\n          this.submitting = false;\r\n          this.authService.showLoader(false);\r\n          this.toastr.error(\r\n            error.status_message._text ||\r\n              \"Something went wrong when trying to create a user\"\r\n          );\r\n        } catch (error) {\r\n          this.submitting = false;\r\n          this.authService.showLoader(false);\r\n          this.toastr.error(\r\n            \"Something went wrong when trying to create a user\"\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"auth-box d-flex flex-column flex-md-row\">\r\n  <div class=\"col-lg-5 d-flex bg-img flex-column align-items-start\">\r\n    <div>\r\n      <img\r\n        src=\"./assets/images/logo-white.png\"\r\n        class=\"mt-auto d-flex d-md-none\"\r\n        alt=\"nigenius logo\"\r\n        srcset=\"\"\r\n      />\r\n      <h1 class=\"text-white font-weight-medium font-weight-med mt-md-5 mt-4\">\r\n        Sign Up\r\n      </h1>\r\n      <h6 class=\"font-weight-thin text-white mb-0 mb-md-2\">\r\n        Nigenius is much better when you have an account.\r\n      </h6>\r\n      <h6 class=\"font-weight-thin text-white pt-md-2 pt-0\">\r\n        Why not create one now.\r\n      </h6>\r\n    </div>\r\n    <img\r\n      src=\"./assets/images/logo-white.png\"\r\n      class=\"mt-auto d-none d-md-flex\"\r\n      alt=\"nigenius logo\"\r\n      srcset=\"\"\r\n    />\r\n  </div>\r\n  <div class=\"col-lg-7 bg-grey position-relative\">\r\n    <form #signUpForm=\"ngForm\" class=\"pull-down\" (ngSubmit)=\"signUpUser(user)\">\r\n      <div class=\"form-input\">\r\n        <div class=\"d-flex flex-row\">\r\n          <label\r\n            class=\"col-lg-4 pl-0 pr-0 col-sm-12 font-weight-light\"\r\n            for=\"gender\"\r\n            >Gender</label\r\n          >\r\n          <div class=\"col-lg-4 pl-0 pr-0 col-sm-12\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"male\"\r\n              [(ngModel)]=\"user.gender\"\r\n              name=\"gender\"\r\n              value=\"male\"\r\n            />\r\n            <label class=\"font-weight-light ml-2\" for=\"male\">Male</label><br />\r\n          </div>\r\n          <div class=\"col-lg-4 pr-0 col-sm-12\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"female\"\r\n              [(ngModel)]=\"user.gender\"\r\n              name=\"gender\"\r\n              value=\"female\"\r\n            />\r\n            <label class=\"font-weight-light ml-2\" for=\"female\">Female</label\r\n            ><br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-input\">\r\n        <label class=\"mb-0\" class=\"font-weight-light\" for=\"name\">Name</label>\r\n        <div class=\"d-flex flex-row\">\r\n          <div class=\"col-lg-6 pl-0 pr-0 col-sm-12\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"First name\"\r\n              required\r\n              name=\"first-name\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"user.first_name\"\r\n            />\r\n          </div>\r\n          <div class=\"col-lg-6 pr-0 col-sm-12\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Last name\"\r\n              required\r\n              name=\"surname\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"user.surname\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-input\">\r\n        <label class=\"mb-0\" class=\"font-weight-light\" for=\"email\"\r\n          >Email Address</label\r\n        >\r\n        <input\r\n          id=\"email\"\r\n          placeholder=\"Type a valid email address\"\r\n          type=\"email\"\r\n          required\r\n          name=\"email\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"user.email\"\r\n        />\r\n      </div>\r\n      <div class=\"form-input\">\r\n        <label class=\"mb-0\" class=\"font-weight-light\" for=\"password\"\r\n          >Password</label\r\n        >\r\n        <div id=\"password\" class=\"d-flex flex-md-row flex-column\">\r\n          <div class=\"position-relative col-md-6 pl-0 pr-0 col-12\">\r\n            <input\r\n              placeholder=\"Type your password\"\r\n              type=\"password\"\r\n              required\r\n              name=\"password\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"user.password\"\r\n            />\r\n            <img\r\n              *ngIf=\"hidePassword\"\r\n              (click)=\"\r\n                hidePassword = authService.changePasswordState(\r\n                  hidePassword,\r\n                  $event,\r\n                  0\r\n                )\r\n              \"\r\n              class=\"password-reveal fade-in\"\r\n              src=\"./assets/images/icons/password-icon.svg\"\r\n            />\r\n            <img\r\n              *ngIf=\"!hidePassword\"\r\n              (click)=\"\r\n                hidePassword = authService.changePasswordState(\r\n                  hidePassword,\r\n                  $event,\r\n                  0\r\n                )\r\n              \"\r\n              class=\"password-reveal fade-in\"\r\n              src=\"./assets/images/icons/password-reveal-icon.svg\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"position-relative col-md-6 pl-0 pl-md-2 pt-2 pt-md-0 pr-0 col-12\"\r\n          >\r\n            <input\r\n              placeholder=\"Re-Type password\"\r\n              type=\"password\"\r\n              exactMatch=\"password\"\r\n              required\r\n              name=\"confrim-password\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"user.confirm_password\"\r\n            />\r\n            <img\r\n              *ngIf=\"hideConfirmPassword\"\r\n              (click)=\"\r\n                hideConfirmPassword = authService.changePasswordState(\r\n                  hideConfirmPassword,\r\n                  $event,\r\n                  0\r\n                )\r\n              \"\r\n              class=\"password-reveal fade-in\"\r\n              src=\"./assets/images/icons/password-icon.svg\"\r\n            />\r\n            <img\r\n              *ngIf=\"!hideConfirmPassword\"\r\n              (click)=\"\r\n                hideConfirmPassword = authService.changePasswordState(\r\n                  hideConfirmPassword,\r\n                  $event,\r\n                  0\r\n                )\r\n              \"\r\n              class=\"password-reveal fade-in\"\r\n              src=\"./assets/images/icons/password-reveal-icon.svg\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        [disabled]=\"!signUpForm.valid\"\r\n        class=\"btn bg-green-400 bg-success cta-btn\"\r\n      >\r\n        Sign up\r\n      </button>\r\n\r\n      <p class=\"pt-4\">\r\n        <small class=\"font-weight-light\"\r\n          >Already have an account?\r\n          <a [routerLink]=\"[routes.login]\" class=\"\"> Log in</a></small\r\n        >\r\n        <br />\r\n        <small class=\"font-weight-light\">\r\n          Forgot Password?\r\n          <a [routerLink]=\"[routes.forgot]\" class=\"\">\r\n            Click here to reset</a\r\n          ></small\r\n        >\r\n      </p>\r\n    </form>\r\n    <div id=\"loading-overlay\" *ngIf=\"submitting\">\r\n      <i class=\"fa fa-spinner edit fa-pulse fa-3x fa-fw\"> </i>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { AuthService, GeneralService } from \"../../@core\";\r\n\r\n@Component({\r\n  selector: \"app-verify-email\",\r\n  templateUrl: \"./verify-email.component.html\",\r\n  styleUrls: [\"./../auth/auth.component.scss\", \"./verify-email.component.scss\"],\r\n})\r\nexport class VerifyEmailComponent implements OnInit {\r\n  loading = true;\r\n  isVerified: boolean;\r\n  status = \"Please wait while we verify your email Address\";\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private generalService: GeneralService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.verify(params.code, params[\"email\"]);\r\n    });\r\n  }\r\n\r\n  verify(code: string, email) {\r\n    this.authService.showLoader(true);\r\n\r\n    this.authService.verifyRegistrationEmail({ code, email }).subscribe(\r\n      (data) => {\r\n        this.loading = false;\r\n        if (data.status._text != \"Failed\") {\r\n          this.isVerified = true;\r\n          this.authService.showLoader(false);\r\n          this.status = \"Hurray your email is now verified :)\";\r\n          this.toastr.success(\r\n            \"You will be redirected to the Login to access the portal\",\r\n            \"Email verified \",\r\n            {\r\n              timeOut: 15000,\r\n            }\r\n          );\r\n          setTimeout(() => {\r\n            this.router.navigate([\"/auth/login\"]);\r\n          }, 4000);\r\n        } else {\r\n          this.isVerified = false;\r\n          this.authService.showLoader(false);\r\n          this.status = \"Something went wrong during verification process\";\r\n          this.toastr.error(\r\n            data.status_message._text || \"Email Not Verified :(\",\r\n            \"Oops,\",\r\n            {\r\n              timeOut: 15000,\r\n            }\r\n          );\r\n        }\r\n      },\r\n      (error) => {\r\n        this.loading = false;\r\n        this.isVerified = false;\r\n        this.authService.showLoader(false);\r\n        this.status = \"Something went wrong during verification process\";\r\n        this.toastr.error(\r\n          error.error.message || \"Email Not Verified :(\",\r\n          \"Oops,\",\r\n          {\r\n            timeOut: 15000,\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n}\r\n","\r\n<div class='fade-in-right'>\r\n\r\n  <h2 *ngIf='loading' class=\"text-center text-main text-center\" >Verifying your details.. </h2>\r\n    <h2 *ngIf='isVerified' class=\"text-center text-main text-center\" >Your email has been verified </h2>\r\n    <div class=\" position-relative\" >\r\n      <div *ngIf='!loading' class='text-center' >\r\n          <img *ngIf='isVerified' src=\"assets/images/verification-sent.svg\"  alt=\"verify image\">\r\n          <img *ngIf='!isVerified' src=\"assets/images/verification-failed.svg\"  alt=\"verify image\">\r\n        <p *ngIf='isVerified' class=\"text-main\" >Your Account Has been Activated</p>\r\n        <p *ngIf='!isVerified' class=\"text-main\" >Account activation was not successful\r\n          <!-- <button class=\"btn col-12 bg-main form-control\" >Resend</button> -->\r\n        </p>\r\n      </div>\r\n\r\n    </div>\r\n    <div *ngIf='loading' class=\"loader w-100 m-auto d-flex position-absolute\">\r\n        <i class=\"fas fa-circle-notch fa-3x fa-spin\"></i>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from '../../@core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlreadyLoggedInGuard implements CanActivate {\r\n  constructor(private router: Router,\r\n              private authService: AuthService) {\r\n\r\n  }\r\n  canActivate(next: ActivatedRouteSnapshot,\r\n              state: RouterStateSnapshot): boolean {\r\n      if (this.authService.getUserLocally()) {\r\n        this.router.navigate(['/page/']);\r\n        return false;\r\n        }\r\n\r\n      return true;\r\n  }\r\n\r\n}\r\n","export * from './already-logged-in/already-logged-in.guard';\r\nexport * from './auth/auth.guard';\r\n\r\n","export * from './user';","class GeneralAPIResponse {\r\n  status?: string;\r\n  status_message?: string;\r\n}\r\n\r\nexport class User extends GeneralAPIResponse {\r\n  user_id?: string;\r\n  token?: string;\r\n  email?: string;\r\n  password?: string;\r\n  newPassword?: string;\r\n  first_name?: string;\r\n  surname?: string;\r\n  gender?: string;\r\n  confirm_password?: string;\r\n}\r\n"]}